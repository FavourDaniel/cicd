name: podtato-head-microservices-release

on:
  push:
    branches:
      - 'main'
      - 'release-*'

env:
  RELEASE_BUILD: 1
  CONTAINER_REGISTRY: ghcr.io
  GITHUB_USER: ${{ github.repository_owner }}
  
defaults:
  run:
    shell: bash

jobs:
  push_images:
    if: github.repository_owner == 'podtato-head'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install requirements
        run: |
          ./scripts/requirements.sh "/usr/local/bin"
      - name: Login to ghcr.io/podtato-head
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Extract custom version for release-* branches
        run: |
          if [[ "${BRANCH}" =~ 'release-' ]]; then
            echo "VERSION=${BRANCH#'release-'}" >> $GITHUB_ENV
          fi
      - name: Push images
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          # for access to ghcr.io/podtato-head instead of ghcr.io/podtato-head/podtato-head
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}  
        run: make push-microservices-images 

  test_services:
    if: github.repository_owner == 'podtato-head'
    needs: push_images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Test services
        env:
          # for access to ghcr.io/podtato-head instead of ghcr.io/podtato-head/podtato-head
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}  
        run: make test-microservices

  finalize:
    if: github.repository_owner == 'podtato-head' && github.ref_name == 'main'
    needs:
      - push_images
      - test_services
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Apply new git tag
        run: |
          source ./scripts/repo_version.sh
          version=$(version_to_use)
          echo "INFO: will tag commit as: ${version}"
          git tag -f "${version}"
          git push --tags